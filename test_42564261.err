Traceback (most recent call last):
  File "/cm/shared/apps/spack/0.17.3/cpu/b/opt/spack/linux-rocky8-zen/gcc-8.5.0/anaconda3-2021.05-q4munrgvh7qp4o7r3nzcdkbuph4z7375/bin/conda", line 12, in <module>
    from conda.cli import main
ModuleNotFoundError: No module named 'conda'
NEURON -- VERSION 8.2.6+ HEAD (078a34a9d+) 2024-07-24
Duke, Yale, and the BlueBrain Project -- Copyright 1984-2022
See http://neuron.yale.edu/neuron/credits

Additional mechanisms from files
 "mod_gpu/APCounter2.mod" "mod_gpu/ar_traub.mod" "mod_gpu/CA1ika.mod" "mod_gpu/CA1ikdr.mod" "mod_gpu/CA1ina.mod" "mod_gpu/cadad.mod" "mod_gpu/cadecay_destexhe.mod" "mod_gpu/cad.mod" "mod_gpu/Cadynamics.mod" "mod_gpu/cadyn.mod" "mod_gpu/cagk.mod" "mod_gpu/cal_mh.mod" "mod_gpu/cal_mig.mod" "mod_gpu/cancr.mod" "mod_gpu/canin.mod" "mod_gpu/can_mig.mod" "mod_gpu/caolmw.mod" "mod_gpu/capr.mod" "mod_gpu/catcb.mod" "mod_gpu/cat_mig.mod" "mod_gpu/cat_traub.mod" "mod_gpu/ch_CavL.mod" "mod_gpu/ch_CavN.mod" "mod_gpu/ch_KCaS.mod" "mod_gpu/ch_Kdrfastngf.mod" "mod_gpu/ch_KvAngf.mod" "mod_gpu/ch_KvCaB.mod" "mod_gpu/ch_leak.mod" "mod_gpu/ch_Navngf.mod" "mod_gpu/ConductanceSource.mod" "mod_gpu/cp2.mod" "mod_gpu/cp.mod" "mod_gpu/gabab.mod" "mod_gpu/h_BS.mod" "mod_gpu/HH2.mod" "mod_gpu/h_harnett.mod" "mod_gpu/HH_traub.mod" "mod_gpu/hin.mod" "mod_gpu/h_kole.mod" "mod_gpu/h_migliore.mod" "mod_gpu/htc.mod" "mod_gpu/Iahp.mod" "mod_gpu/ICal.mod" "mod_gpu/Ican.mod" "mod_gpu/ican_sidi.mod" "mod_gpu/icaolmw.mod" "mod_gpu/icapr.mod" "mod_gpu/iccr.mod" "mod_gpu/IC.mod" "mod_gpu/iconc_Ca.mod" "mod_gpu/iholmkop.mod" "mod_gpu/iholmw.mod" "mod_gpu/ihpyrkop.mod" "mod_gpu/IKM.mod" "mod_gpu/ikscr.mod" "mod_gpu/IKsin.mod" "mod_gpu/IL_gutnick.mod" "mod_gpu/IL.mod" "mod_gpu/IM_cortex.mod" "mod_gpu/ipulse3.mod" "mod_gpu/IT2.mod" "mod_gpu/IT.mod" "mod_gpu/kahppr.mod" "mod_gpu/kaolmkop.mod" "mod_gpu/kap_BS.mod" "mod_gpu/kapcb.mod" "mod_gpu/kapin.mod" "mod_gpu/kapyrkop.mod" "mod_gpu/kBK.mod" "mod_gpu/kca.mod" "mod_gpu/kcaolmw.mod" "mod_gpu/kcpr.mod" "mod_gpu/kctin.mod" "mod_gpu/kdmc_BS.mod" "mod_gpu/kdr2_orig.mod" "mod_gpu/kdr_BS.mod" "mod_gpu/kdrbwb.mod" "mod_gpu/kdrcr.mod" "mod_gpu/kdrin.mod" "mod_gpu/kdrolmkop.mod" "mod_gpu/kdrpr.mod" "mod_gpu/kdrpyrkop.mod" "mod_gpu/kl.mod" "mod_gpu/km.mod" "mod_gpu/kv.mod" "mod_gpu/MyExp2SynAlpha.mod" "mod_gpu/MyExp2SynBB.mod" "mod_gpu/my_exp2syn.mod" "mod_gpu/MyExp2SynNMDABB.mod" "mod_gpu/na_2.mod" "mod_gpu/naf2.mod" "mod_gpu/nafbwb.mod" "mod_gpu/nafcr.mod" "mod_gpu/nafolmkop.mod" "mod_gpu/nafpr.mod" "mod_gpu/nafpyrkop.mod" "mod_gpu/nafx.mod" "mod_gpu/nap_sidi.mod" "mod_gpu/nax_BS.mod" "mod_gpu/naz.mod" "mod_gpu/Nca.mod" "mod_gpu/ntIh.mod" "mod_gpu/ntleak.mod" "mod_gpu/ntt_int.mod" "mod_gpu/ntt.mod" "mod_gpu/pasi.mod" "mod_gpu/savedist.mod" "mod_gpu/tia.mod" "mod_gpu/vecstim.mod"
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:558: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/smcelroy/.conda/envs/py310/lib/python3.10/site-packages/numpy/_core/getlimits.py:90: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
Traceback (most recent call last):
  File "init.py", line 22, in <module>
    from netParams import netParams, cfg
  File "/home/smcelroy/GPUA1/netParams.py", line 78, in <module>
    netParams.loadCellParamsRule(label=ruleLabel, fileName='cells/' + ruleLabel + '_cellParams.json')  # Load cellParams for each of the above cell subtype
  File "/home/smcelroy/netpyne/netpyne/specs/netParams.py", line 807, in loadCellParamsRule
    cellRule = json.load(fileObj)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/smcelroy/.conda/envs/py310/lib/python3.10/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 14 column 5 (char 248)
--------------------------------------------------------------------------
Primary job  terminated normally, but 1 process returned
a non-zero exit code. Per user-direction, the job has been aborted.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
mpirun detected that one or more processes exited with non-zero status, thus causing
the job to be terminated. The first process to do so was:

  Process name: [[58442,1],12]
  Exit code:    1
--------------------------------------------------------------------------

real	0m6.534s
user	0m3.128s
sys	0m1.304s
